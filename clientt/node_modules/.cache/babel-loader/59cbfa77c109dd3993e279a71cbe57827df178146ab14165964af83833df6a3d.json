{"ast":null,"code":"var _jsxFileName = \"/home/enes/Desktop/16ocak lamadev bllog/client/src/components/singlePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport \"./singlePost.css\";\nimport axios from \"axios\";\nimport { Link, useLocation } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"singlePostTitleInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-regular fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-trash\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: `/?user=${post.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: desc,\n        onChange: e => setDesc(e.target.value),\n        className: \"singlePostDescInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(SinglePost, \"e+pfhbmVNAJGgAXvDxuNkjsCBds=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","Link","useLocation","useContext","useEffect","useState","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"sources":["/home/enes/Desktop/16ocak lamadev bllog/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import \"./singlePost.css\";\nimport axios from \"axios\";\nimport {Link, useLocation} from 'react-router-dom';\nimport {useContext, useEffect, useState} from 'react';\nimport {Context} from '../../context/Context';\nconst SinglePost = () => {\n    const location = useLocation();\n    const path = location.pathname.split(\"/\")[2];\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:5000/images/\"\n    const {user} = useContext(Context);\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [updateMode, setUpdateMode] = useState(false);\n    useEffect(() => {\n        const getPost = async () => {\n\n                const res = await axios.get(\"/posts/\" + path);\n                setPost(res.data);\n                setTitle(res.data.title);\n                setDesc(res.data.desc);\n        }\n        getPost();\n    },[path])\n    const handleDelete = async () => {\n        try{\n            await axios.delete(`/post/${post._id}`, {data:{username: user.username}});\n            window.location.replace(\"/\");\n        }catch (err){}\n    }\n    const handleUpdate = async() => {\n        try{\n            await axios.put(`/posts/${post._id}`, {\n                username : user.username,\n                title,\n                desc,\n            });\n            setUpdateMode(false);\n        }catch (err){}\n    }\n\n    return (\n        <div className=\"singlePost\">\n            <div className=\"singlePostWrapper\">\n                {post.photo && (\n                    <img\n                        src={PF + post.photo}\n                        alt=\"\"\n                        className=\"singlePostImg\"/>\n                )}\n                {updateMode ? (<input autoFocus type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} className=\"singlePostTitleInput\"/>)\n                    : (\n                        <h1 className=\"singlePostTitle\">\n                            {title}\n                            {post.username === user.username &&(\n                                <div className=\"singlePostEdit\">\n                                    <i className=\"singlePostIcon fa-regular fa-pen-to-square\" onClick={() => setUpdateMode(true)}></i>\n                                    <i className=\"singlePostIcon fa-solid fa-trash\" onClick={handleDelete}></i>\n                                </div>\n                            )}\n                        </h1>\n                    )}\n\n                <div className=\"singlePostInfo\">\n                    <span className=\"singlePostAuthor\">\n                        Author:\n                        <Link className=\"link\" to={`/?user=${post.username}`}>\n                            <b>{post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\n                </div>\n                {updateMode ? (<textarea value={desc} onChange={(e) => setDesc(e.target.value)} className=\"singlePostDescInput\"/>) :\n                    (<p className=\"singlePostDesc\">\n                        {desc}\n                    </p>)}\n                {updateMode && (\n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}